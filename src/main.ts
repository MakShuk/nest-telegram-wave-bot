import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { Logger, LogLevel } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';

async function bootstrap() {
  try {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    const logLevels: LogLevel[] =
      process.env.NODE_ENV === 'production'
        ? ['error', 'warn']
        : ['error', 'warn', 'log', 'debug'];

    // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
    const app = await NestFactory.create(AppModule, {
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Ä–æ–≤–Ω–µ–π –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º
      logger: logLevels,
      // –í–∫–ª—é—á–µ–Ω–∏–µ CORS –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      cors: true,
      // –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      bufferLogs: true,
    });

    // –ü–æ–ª—É—á–µ–Ω–∏–µ ConfigService –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const configService = app.get(ConfigService);
    const port = configService.get<number>('PORT', 3000);
    const environment = configService.get<string>('NODE_ENV', 'development');

    // Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è development)
    if (environment === 'development') {
      const config = new DocumentBuilder()
        .setTitle('API Documentation')
        .setVersion('1.0')
        .build();
      const document = SwaggerModule.createDocument(app, config);
      SwaggerModule.setup('docs', app, document);
    }

    // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await app.listen(port);

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    const logger = new Logger('Bootstrap');
    logger.log(`üöÄ Application is running on: http://localhost:${port}`);
    logger.log(`üìù Environment: ${environment}`);
    if (environment === 'development') {
      logger.log(
        `üìö Swagger documentation available at: http://localhost:${port}/docs`,
      );
    }
  } catch (error) {
    Logger.error(`‚ùå Error starting server: ${error.message}`, error.stack);
    process.exit(1);
  }
}

bootstrap();
